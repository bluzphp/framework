<?php

namespace Bluz\Db;

use Bluz;

require_once 'ConcreteTable.php';
require_once 'WrongTable.php';
require_once 'WrongKeysTable.php';

/**
 * Test class for Table.
 * Generated by PHPUnit on 2011-07-27 at 13:52:47.
 */
class TableTest extends Bluz\TestCase
{
    /**
     * @var Table
     */
    protected $table;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->table = ConcreteTable::getInstance();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * testGetInstance
     */
    public function testGetInstance()
    {
        // test that the method doesn't create new objects
        $this->assertSame($this->table, ConcreteTable::getInstance());
        
        // tests that instances are creating separately for each table class
        $this->assertEquals('Bluz\Db\ConcreteTable', get_class(ConcreteTable::getInstance()));
        $this->assertEquals('Bluz\Db\WrongKeysTable', get_class(WrongKeysTable::getInstance()));
    }

    /**
     * @todo Implement testSetAdapter().
     */
    public function testSetAdapter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetAdapter().
     */
    public function testGetAdapter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    
    /**
     * @expectedException Bluz\Db\InvalidPrimaryKeyException
     */
    public function testGetPrimaryKeyException()
    {
        $table = WrongKeysTable::getInstance();
        $table->getPrimaryKey();
    }

    /**
     * @todo Implement testGetPrimaryKey().
     */
    public function testGetPrimaryKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetRowClass().
     */
    public function testGetRowClass()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @dataProvider getFindWrongData
     * @expectedException Bluz\Db\InvalidPrimaryKeyException
     * @param $keyValues
     */
    public function testFindException($keyValues)
    {
        call_user_func_array(array($this->table, 'find'), $keyValues);
    }
    
    public function getFindWrongData()
    {
        return array(
            array(array(1)),
            array(array(1, 2, 3))
        );
    }

    /**
     * @todo Implement testFind().
     */
    public function testFind()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testInsert().
     */
    public function testInsert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}